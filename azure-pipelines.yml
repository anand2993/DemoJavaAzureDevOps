---
trigger:
  - main
resources:
  - repo: self
variables:
  tag: $(Build.BuildId)
stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: UseJava@1
            inputs:
              versionSpec: 17.x
              jdkArchitectureOption: x64
              jdkSourceOption: PreInstalled
              jdkDestinationDirectory: $(Agent.ToolsDirectory)/Java_17_x64
          - script: |
              echo "Maven version:"
               mvn -version
            displayName: Show Maven version
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: SonarCloud Service Connection
              organization: $(sonarOrganization)
              scannerMode: CLI
              configMode: manual
              cliProjectKey: $(sonarProjectKey)
              cliSources: src
              extraProperties: |
                sonar.java.binaries=target/classes
                sonar.login=$(sonarLogin)
          - script: |
              # Clean and build the project
              mvn clean install
            displayName: Build project
          - script: >
              # Run SonarCloud analysis

              mvn sonar:sonar -Dsonar.projectKey=$(sonarProjectKey) -Dsonar.organization=$(sonarOrganization) -Dsonar.host.url=$(sonarHostUrl) -Dsonar.login=$(sonarLogin)
            displayName: Run SonarCloud Analysis
          - task: SonarCloudPublish@1
            inputs: null
            pollingTimeoutSec: "300"
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: "17"
              jdkArchitectureOption: x64
              jdkSourceOption: PreInstalled
          - task: Docker@2
            inputs:
              containerRegistry: DockerConnection
              repository: anand2993/javamavenimage
              command: buildAndPush
              Dockerfile: "**/Dockerfile"
